version: '3.8'

services:
    nest-app:
        inage: khanhzip14/nest-app:latest # Use the latest image from Docker Hub
        ports:
            - '3000:3000' # Exposing the application on port 3000
        env_file:
            - .env
        depends_on:
            - postgres
        volumes:
            - .:/app # Mount the current directory to the container (can be optimized for production)
        command: npm run start:prod # Run the production build of NestJS app
        restart: always # Ensure the container restarts if it crashes
        networks:
            - app-network # Optional: Define a custom network if needed

    postgres:
        image: postgres:15 # Use the official PostgreSQL image
        restart: always
        environment:
            POSTGRES_USER: ${DATABASE_USER} # These values should be set in the .env.prod file
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: ${DATABASE_NAME}
        ports:
            - '5432:5432' # Expose PostgreSQL on default port
        volumes:
            - pgdata:/var/lib/postgresql/data # Persist PostgreSQL data across container restarts
        networks:
            - app-network # Same network as the app to allow communication between services

volumes:
    pgdata: # Volume to persist PostgreSQL data

networks:
    app-network: # Optional: If you want to create a custom network for communication between services
        driver: bridge # Can be changed depending on your networking needs
